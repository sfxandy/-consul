- name: Bootstrap Ansible control node for user zfoo
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - bootstrap_vars.yml
  vars:
    repo_root: "/home/zfoo/ansible"
    inv_dir: "{{ repo_root }}/inventory"
    hosts_ini: "{{ inv_dir }}/hosts.ini"
    group_vars_dir: "{{ inv_dir }}/group_vars"
    all_vars_file: "{{ group_vars_dir }}/all.yml"
    cfg_path: "/home/zfoo/.ansible.cfg"
  tasks:
    - name: Create base directories
      file:
        path: "{{ item }}"
        state: directory
        owner: zfoo
        group: zfoo
        mode: '0755'
      loop:
        - "{{ repo_root }}"
        - "{{ inv_dir }}"
        - "{{ group_vars_dir }}"
        - "{{ repo_root }}/playbooks"
        - "{{ repo_root }}/roles"

    - name: Write inventory (seed it with your lab hosts)
      copy:
        dest: "{{ hosts_ini }}"
        owner: zfoo
        group: zfoo
        mode: '0644'
        content: |
          [lab]
          lab1 ansible_user=zfoo
          lab2 ansible_user=zfoo
          lab3 ansible_user=zfoo
          lab4 ansible_user=zfoo

    - name: Promote bootstrap globals into group_vars/all.yml
      copy:
        dest: "{{ all_vars_file }}"
        owner: zfoo
        group: zfoo
        mode: '0644'
        content: |
          # Generated by configure-control-node.yml
          {{ lookup('file', 'bootstrap_vars.yml') }}

    - name: Create user-level ansible.cfg (non-root)
      copy:
        dest: "{{ cfg_path }}"
        owner: zfoo
        group: zfoo
        mode: '0644'
        content: |
          [defaults]
          inventory = {{ hosts_ini }}
          interpreter_python = auto_silent
          retry_files_enabled = False
          host_key_checking = False

          [ssh_connection]
          pipelining = True

    - name: Validate config for next runs
      command: ansible-config dump -c "{{ cfg_path }}"
      changed_when: false
